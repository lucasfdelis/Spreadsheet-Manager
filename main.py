# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from tkinter import filedialog
from tkinter import *
import pandas as pd
import shutil
import os
from status import Ui_Status
from cadastro import Ui_Cadastro
import sqlite3


class Ui_MainWindow(object):
    def __init__(self,priv_bd):
        self.priv_bd = priv_bd
    def reset(self):
        try:
            self.tPF1 = 'PF1 Não selecionado.'
            self.tPF2 = 'PF2 Não selecionado.'
            self.tPF3 = 'PF3 Não selecionado.'
            self.tPF4 = 'PF4 Não selecionado.'
            self.tPF5 = 'PF5 Não selecionado.'
            self.tPF6 = 'PF6 Não selecionado.'
            self.folder1 = 'Pasta principal não selecionada.'
            banco = sqlite3.connect('bdCadastro.db') 
            cursor = banco.cursor()
            cursor.execute("""UPDATE caminhos SET principal = ? ,pf1 = ? ,pf2 = ? ,pf3 = ? ,pf4 = ? ,pf5 = ? ,pf6 = ? WHERE verif= ? """,
            (self.folder1,self.tPF1,self.tPF2,self.tPF3,self.tPF4,self.tPF5,self.tPF6,'1'))
            banco.commit()
            banco.close()
            
        except Exception as e:
            print(e)
            
    def salvar(self):
        try:            
            banco = sqlite3.connect('bdCadastro.db') 
            cursor = banco.cursor()
            cursor.execute("""UPDATE caminhos SET principal = ? ,pf1 = ? ,pf2 = ? ,pf3 = ? ,pf4 = ? ,pf5 = ? ,pf6 = ? WHERE verif= ? """,
            (self.folder1,self.tPF1,self.tPF2,self.tPF3,self.tPF4,self.tPF5,self.tPF6,'1'))
            banco.commit() 
            banco.close()
            
        except Exception as e:
            print(e)
    def openStatus(self):
        try:
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_Status(self.tPF1,
                                self.tPF2,
                                self.tPF3,
                                self.tPF4,
                                self.tPF5,
                                self.tPF6,
                                self.folder1)
            self.ui.setupUi(self.window)
            self.window.show()
        except Exception as e:
            print(e)
    def openCadastro(self):
        try:
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_Cadastro()
            self.ui.setupUi(self.window)
            self.window.show()
        except Exception as e:
            print(e)
            
    def pf1(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF1 = filedialog.askdirectory(title='Escolher PF1')
        except Exception as e:
            print(e)
            
    def pf2(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF2 = filedialog.askdirectory(title='Escolher PF2')
        except Exception as e:
            print(e)
            
    def pf3(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF3 = filedialog.askdirectory(title='Escolher PF3')
        except Exception as e:
            print(e)
            
    def pf4(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF4 = filedialog.askdirectory(title='Escolher PF4')
        except Exception as e:
            print(e)
            
    def pf5(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF5 = filedialog.askdirectory(title='Escolher PF5')
        except Exception as e:
            print(e)
            
    def pf6(self):
        try:
            root = Tk()
            root.withdraw()
            self.tPF6 = filedialog.askdirectory(title='Escolher PF6')
        except Exception as e:
            print(e)
            
    def escolherpl1(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet1 = filedialog.askopenfilename(title='Escolher Lista para PF1',initialdir=self.folder1)
            self.nomelista = self.sheet1.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_9.setText(self.nomelista)
            self.label_9.show()
        except Exception as e:
            print(e)
            
    def escolherpl2(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet2 = filedialog.askopenfilename(title='Escolher Lista para PF2',initialdir=self.folder1)
            self.nomelista = self.sheet2.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_5.setText(self.nomelista)
            self.label_5.show()
        except Exception as e:
            print(e)
            
    def escolherpl3(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet3 = filedialog.askopenfilename(title='Escolher Lista para PF3',initialdir=self.folder1)
            self.nomelista = self.sheet3.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_10.setText(self.nomelista)
            self.label_10.show()
        except Exception as e:
            print(e)
            
    def escolherpl4(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet4 = filedialog.askopenfilename(title='Escolher Lista para PF4',initialdir=self.folder1)
            self.nomelista = self.sheet4.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_11.setText(self.nomelista)
            self.label_11.show()
        except Exception as e:
            print(e)
            
    def escolherpl5(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet5 = filedialog.askopenfilename(title='Escolher Lista para PF5',initialdir=self.folder1)
            self.nomelista = self.sheet5.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_12.setText(self.nomelista)
            self.label_12.show()
        except Exception as e:
            print(e)
            
    def escolherpl6(self):
        try:
            root = Tk()
            root.withdraw()
            self.sheet6 = filedialog.askopenfilename(title='Escolher Lista para PF6',initialdir=self.folder1)
            self.nomelista = self.sheet6.split('/')
            self.nomelista = self.nomelista[-1]
            self.label_13.setText(self.nomelista)
            self.label_13.show()
        except Exception as e:
            print(e)
                
    def check1(self):

        if(self.check_pf1.isChecked()):
            self.selecionar_pf1.show()
            self.selecionar_pf1.clicked.connect(self.escolherpl1)
        if(self.check_pf1.isChecked()==False):
            self.selecionar_pf1.hide()
            self.label_9.hide()
            
    def check2(self):
        if(self.check_pf2.isChecked()):
            self.selecionar_pf2.show()
            self.selecionar_pf2.clicked.connect(self.escolherpl2)
        if(self.check_pf2.isChecked()==False):
            self.selecionar_pf2.hide()
            self.label_5.hide()
            
    def check3(self):
        if(self.check_pf3.isChecked()):
            self.selecionar_pf3.show()
            self.selecionar_pf3.clicked.connect(self.escolherpl3)
        if(self.check_pf3.isChecked()==False):
            self.selecionar_pf3.hide()
            self.label_10.hide()
            
    def check4(self): 
        if(self.check_pf4.isChecked()):
            self.selecionar_pf4.show()
            self.selecionar_pf4.clicked.connect(self.escolherpl4)
        if(self.check_pf4.isChecked()==False):
            self.selecionar_pf4.hide()
            self.label_11.hide()
            
    def check5(self):
        if(self.check_pf5.isChecked()):
            self.selecionar_pf5.show()
            self.selecionar_pf5.clicked.connect(self.escolherpl5)
        if(self.check_pf5.isChecked()==False):
            self.selecionar_pf5.hide()
            self.label_12.hide()
            
    def check6(self):
        if(self.check_pf6.isChecked()):
            self.selecionar_pf6.show()
            self.selecionar_pf6.clicked.connect(self.escolherpl6)
        if(self.check_pf6.isChecked()==False):
            self.selecionar_pf6.hide()
            self.label_13.hide()
            
    def principal(self):
        try:
            root = Tk()
            root.withdraw()
            self.folder1 = filedialog.askdirectory(title='Escolher pasta')
        except Exception as e:
            print(e)
            
    def selec_planilhas(self):
        try:
            root = Tk()
            root.withdraw()
            self.folder = filedialog.askopenfilename(title='Escolher planilha')
            self.label_16.setText(self.folder)
            self.label_16.show()
        except Exception as e:
            print(e)
            
    def edit_planilhas(self):
        try:
            df = pd.read_excel(self.folder)
            df.to_csv('lista.csv',sep=';', index=False, encoding='utf-8-sig')
            nc = (list(df.columns))
            if(self.selec_nlinhas.value() == 0):
                n1 = 15
            else:
                nl = self.selec_nlinhas.value()
            csvfile = open('lista.csv',encoding='utf-8-sig').readlines()
            filename = 1
            for i in range(len(csvfile)):
             if i % nl == 0:
                open(self.folder1+'/LISTA ' + str(filename) + '.csv', 'w+').writelines(csvfile[i:i+nl])
                if(i>0):
                    lista = pd.read_csv(self.folder1+'/LISTA ' + str(filename) + '.csv',sep=';',engine='python', header=None)
                    lista.to_csv(self.folder1+'/LISTA ' + str(filename) + '.csv', sep=';',header=nc, index=False, encoding='utf-8-sig')
                filename = filename+1
                
            self.msg = QMessageBox()
            self.msg.setWindowTitle('Edição de planilhas')
            self.msg.setIcon(QMessageBox.Information)
            self.msg.setText("Sucesso.")
            self.msg.exec_()
           
        except Exception as e:
           self.msg = QMessageBox()
           self.msg.setIcon(QMessageBox.Warning)
           self.msg.setWindowTitle('Erro.')
           self.msg.setText("Verifique se a planilha foi selecionada corretamente.")
           self.msg.setDetailedText(str(e))
           self.msg.exec_()
            
    def enviar(self):
        self.verifEnvio = ['PF1 - ENVIADO',
                           'PF2 - ENVIADO',
                           'PF3 - ENVIADO',
                           'PF4 - ENVIADO',
                           'PF5 - ENVIADO',
                           'PF6 - ENVIADO']
        try:
           if(self.label_9.isVisible()):
               if(self.tPF1 == ''):
                   self.verifEnvio[0] = 'PF1 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet1, self.tPF1)
           else:
               self.verifEnvio[0] = 'PF1 - NÃO ENVIADO'
           if(self.label_5.isVisible()):
               if(self.tPF2 == ''):
                   self.verifEnvio[1] = 'PF2 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet2, self.tPF2)
           else:
               self.verifEnvio[1] = 'PF2 - NÃO ENVIADO'
           if(self.label_10.isVisible()):
               if(self.tPF3 == ''):
                   self.verifEnvio[2] = 'PF3 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet3, self.tPF3)
           else:
               self.verifEnvio[2] = 'PF3 - NÃO ENVIADO'
           if(self.label_11.isVisible()):
               if(self.tPF4 == ''):
                   self.verifEnvio[3] = 'PF4 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet4, self.tPF4)
           else:
               self.verifEnvio[3] = 'PF4 - NÃO ENVIADO'
           if(self.label_12.isVisible()):
               if(self.tPF5 == ''):
                   self.verifEnvio[4] = 'PF5 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet5, self.tPF5)
           else:
               self.verifEnvio[4] = 'PF5 - NÃO ENVIADO'
           if(self.label_13.isVisible()):
               if(self.tPF6 == ''):
                   self.verifEnvio[5] = 'PF6 - NÃO ENVIADO'
               else:
                   shutil.copy(self.sheet6, self.tPF6)
           else:
               self.verifEnvio[5] = 'PF6 - NÃO ENVIADO'

           self.msg = QMessageBox()
           self.msg.setWindowTitle('Envio de planilhas')
           self.msg.setIcon(QMessageBox.Information)
           self.msg.setText("Botão 'enviar' pressionado.")
           self.msg.setInformativeText("Verifique quais planilhas foram enviadas abaixo:")
           self.msg.setDetailedText('\n'.join(map(str,self.verifEnvio)))
           self.msg.exec_()
           
        except Exception as e:
            print(e)
            
    def setupUi(self, MainWindow):
        
        banco = sqlite3.connect('bdCadastro.db') 
        cursor = banco.cursor()
        cursor.execute("SELECT * FROM caminhos")
        rows = cursor.fetchall()
        rows = rows[0]
        self.tPF1 = rows[1]
        self.tPF2 = rows[2]
        self.tPF3 = rows[3]
        self.tPF4 = rows[4]
        self.tPF5 = rows[5]
        self.tPF6 = rows[6]
        self.folder1 = rows[0]
        banco.close()
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(911, 657)
        MainWindow.setStyleSheet(open("css/main.css").read())
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.header = QtWidgets.QFrame(self.centralwidget)
        self.header.setGeometry(QtCore.QRect(10, 10, 891, 111))
        self.header.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.header.setFrameShadow(QtWidgets.QFrame.Raised)
        self.header.setObjectName("header")
        self.label_2 = QtWidgets.QLabel(self.header)
        self.label_2.setGeometry(QtCore.QRect(130, 60, 651, 41))
        self.label_2.setObjectName("label_2")
        self.toolButton = QtWidgets.QToolButton(self.header)
        self.toolButton.setGeometry(QtCore.QRect(10, 10, 91, 91))
        self.toolButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/multi.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton.setIcon(icon)
        self.toolButton.setIconSize(QtCore.QSize(100, 100))
        self.toolButton.setObjectName("toolButton")
        self.enviar_frame = QtWidgets.QFrame(self.centralwidget)
        self.enviar_frame.setGeometry(QtCore.QRect(10, 330, 891, 201))
        self.enviar_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.enviar_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.enviar_frame.setObjectName("enviar_frame")
        self.check_pf6 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf6.setGeometry(QtCore.QRect(720, 30, 141, 51))
        self.check_pf6.setObjectName("check_pf6")        
        self.check_pf6.clicked.connect(self.check6)        
        self.check_pf5 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf5.setGeometry(QtCore.QRect(580, 30, 141, 51))
        self.check_pf5.setObjectName("check_pf5")
        self.check_pf5.clicked.connect(self.check5)        
        self.check_pf2 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf2.setGeometry(QtCore.QRect(160, 30, 141, 51))
        self.check_pf2.setObjectName("check_pf2")
        self.check_pf2.clicked.connect(self.check2)        
        self.check_pf3 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf3.setGeometry(QtCore.QRect(300, 30, 141, 51))
        self.check_pf3.setObjectName("check_pf3")
        self.check_pf3.clicked.connect(self.check3)
        self.check_pf1 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf1.setGeometry(QtCore.QRect(20, 30, 141, 51))
        self.check_pf1.setObjectName("check_pf1")
        self.check_pf1.clicked.connect(self.check1)
        self.check_pf4 = QtWidgets.QCheckBox(self.enviar_frame)
        self.check_pf4.setGeometry(QtCore.QRect(440, 30, 141, 51))
        self.check_pf4.setObjectName("check_pf4")
        self.check_pf4.clicked.connect(self.check4)
        self.label_3 = QtWidgets.QLabel(self.enviar_frame)
        self.label_3.setGeometry(QtCore.QRect(340, 10, 221, 31))
        self.label_3.setObjectName("label_3")
        self.enviar_planilhas = QtWidgets.QPushButton(self.enviar_frame)
        self.enviar_planilhas.setGeometry(QtCore.QRect(30, 160, 831, 31))
        self.enviar_planilhas.setObjectName("enviar_planilhas")
        self.enviar_planilhas.clicked.connect(self.enviar)
        self.selecionar_pf1 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf1.setGeometry(QtCore.QRect(30, 80, 121, 41))
        self.selecionar_pf1.setObjectName("selecionar_pf1")
        self.selecionar_pf1.hide()
        self.selecionar_pf2 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf2.setGeometry(QtCore.QRect(170, 80, 121, 41))
        self.selecionar_pf2.setObjectName("selecionar_pf2")
        self.selecionar_pf2.hide()
        self.selecionar_pf3 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf3.setGeometry(QtCore.QRect(310, 80, 121, 41))
        self.selecionar_pf3.setObjectName("selecionar_pf3")
        self.selecionar_pf3.hide()
        self.selecionar_pf4 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf4.setGeometry(QtCore.QRect(450, 80, 121, 41))
        self.selecionar_pf4.setObjectName("selecionar_pf4")
        self.selecionar_pf4.hide()
        self.selecionar_pf5 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf5.setGeometry(QtCore.QRect(590, 80, 121, 41))
        self.selecionar_pf5.setObjectName("selecionar_pf5")
        self.selecionar_pf5.hide()
        self.selecionar_pf6 = QtWidgets.QPushButton(self.enviar_frame)
        self.selecionar_pf6.setGeometry(QtCore.QRect(730, 80, 121, 41))
        self.selecionar_pf6.setObjectName("selecionar_pf6")
        self.selecionar_pf6.hide()
        self.label_5 = QtWidgets.QLabel(self.enviar_frame)
        self.label_5.setGeometry(QtCore.QRect(170, 130, 121, 16))
        self.label_5.setObjectName("label_5")
        self.label_5.hide()
        self.label_9 = QtWidgets.QLabel(self.enviar_frame)
        self.label_9.setGeometry(QtCore.QRect(30, 130, 121, 16))
        self.label_9.setObjectName("label_9")
        self.label_9.hide()
        self.label_10 = QtWidgets.QLabel(self.enviar_frame)
        self.label_10.setGeometry(QtCore.QRect(310, 130, 121, 16))
        self.label_10.setObjectName("label_10")
        self.label_10.hide()
        self.label_11 = QtWidgets.QLabel(self.enviar_frame)
        self.label_11.setGeometry(QtCore.QRect(450, 130, 121, 16))
        self.label_11.setObjectName("label_11")
        self.label_11.hide()
        self.label_12 = QtWidgets.QLabel(self.enviar_frame)
        self.label_12.setGeometry(QtCore.QRect(590, 130, 121, 16))
        self.label_12.setObjectName("label_12")
        self.label_12.hide()
        self.label_13 = QtWidgets.QLabel(self.enviar_frame)
        self.label_13.setGeometry(QtCore.QRect(730, 130, 121, 16))
        self.label_13.setObjectName("label_13")
        self.label_13.hide()
        self.editar_frame = QtWidgets.QFrame(self.centralwidget)
        self.editar_frame.setGeometry(QtCore.QRect(10, 130, 891, 191))
        self.editar_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.editar_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.editar_frame.setObjectName("editar_frame")
        self.label_8 = QtWidgets.QLabel(self.editar_frame)
        self.label_8.setGeometry(QtCore.QRect(790, 460, 101, 21))
        self.label_8.setObjectName("label_8")
        self.label_14 = QtWidgets.QLabel(self.editar_frame)
        self.label_14.setGeometry(QtCore.QRect(700, 440, 181, 21))
        self.label_14.setObjectName("label_14")
        self.selecionar_planilhas = QtWidgets.QPushButton(self.editar_frame)
        self.selecionar_planilhas.setGeometry(QtCore.QRect(310, 50, 271, 31))
        self.selecionar_planilhas.setObjectName("selecionar_planilhas")
        self.selecionar_planilhas.clicked.connect(self.selec_planilhas)        
        self.label_6 = QtWidgets.QLabel(self.editar_frame)
        self.label_6.setGeometry(QtCore.QRect(310, 110, 171, 31))
        self.label_6.setObjectName("label_6")
        self.selec_nlinhas = QtWidgets.QSpinBox(self.editar_frame)
        self.selec_nlinhas.setGeometry(QtCore.QRect(490, 110, 41, 31))
        self.selec_nlinhas.setObjectName("selec_nlinhas")
        self.selec_nlinhas.setMinimum(10)
        self.label_7 = QtWidgets.QLabel(self.editar_frame)
        self.label_7.setGeometry(QtCore.QRect(540, 110, 61, 31))
        self.label_7.setObjectName("label_7")
        self.editar_planilha = QtWidgets.QPushButton(self.editar_frame)
        self.editar_planilha.setGeometry(QtCore.QRect(30, 150, 831, 31))
        self.editar_planilha.setObjectName("editar_planilha")
        self.editar_planilha.clicked.connect(self.edit_planilhas)        
        self.label_15 = QtWidgets.QLabel(self.editar_frame)
        self.label_15.setGeometry(QtCore.QRect(370, 10, 211, 31))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.editar_frame)
        self.label_16.setGeometry(QtCore.QRect(30, 80, 841, 31))
        self.label_16.setObjectName("label_16")
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.hide()
        self.rodape = QtWidgets.QFrame(self.centralwidget)
        self.rodape.setGeometry(QtCore.QRect(10, 540, 891, 81))
        self.rodape.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.rodape.setFrameShadow(QtWidgets.QFrame.Raised)
        self.rodape.setObjectName("rodape")
        self.label_21 = QtWidgets.QLabel(self.rodape)
        self.label_21.setGeometry(QtCore.QRect(700, 40, 111, 20))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.rodape)
        self.label_22.setGeometry(QtCore.QRect(710, 50, 131, 20))
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.rodape)
        self.label_23.setGeometry(QtCore.QRect(720, 18, 91, 31))
        self.label_23.setObjectName("label_23")
        self.toolButton_2 = QtWidgets.QToolButton(self.rodape)
        self.toolButton_2.setGeometry(QtCore.QRect(820, 10, 61, 61))
        self.toolButton_2.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("img/python.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_2.setIcon(icon1)
        self.toolButton_2.setIconSize(QtCore.QSize(100, 100))
        self.toolButton_2.setObjectName("toolButton_2")
        self.editar_frame.raise_()
        self.enviar_frame.raise_()
        self.header.raise_()
        self.rodape.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 911, 26))
        self.menuBar.setObjectName("menuBar")
        self.menuConfigura_es = QtWidgets.QMenu(self.menuBar)
        self.menuConfigura_es.setObjectName("menuConfigura_es")
        self.menuEditar_televendas = QtWidgets.QMenu(self.menuConfigura_es)
        self.menuEditar_televendas.setObjectName("menuEditar_televendas")
        MainWindow.setMenuBar(self.menuBar)
        self.actionEditar_pasta_principal = QtWidgets.QAction(MainWindow)
        self.actionEditar_pasta_principal.setObjectName("actionEditar_pasta_principal")
        self.actionPF1 = QtWidgets.QAction(MainWindow)
        self.actionPF1.setObjectName("actionPF1")
        self.actionPF2 = QtWidgets.QAction(MainWindow)
        self.actionPF2.setObjectName("actionPF2")
        self.actionPF3 = QtWidgets.QAction(MainWindow)
        self.actionPF3.setObjectName("actionPF3")
        self.actionPF4 = QtWidgets.QAction(MainWindow)
        self.actionPF4.setObjectName("actionPF4")
        self.actionPF5 = QtWidgets.QAction(MainWindow)
        self.actionPF5.setObjectName("actionPF5")
        self.actionPF6 = QtWidgets.QAction(MainWindow)
        self.actionPF6.setObjectName("actionPF6")
        self.actionConsultar_status_de_envio = QtWidgets.QAction(MainWindow)
        self.actionConsultar_status_de_envio.setObjectName("actionConsultar_status_de_envio")
        self.actionCadastro_usuarios = QtWidgets.QAction(MainWindow)
        self.actionCadastro_usuarios.setObjectName("actionCadastro_usuarios")
        self.menuEditar_televendas.addAction(self.actionPF1)
        self.menuEditar_televendas.addAction(self.actionPF2)
        self.menuEditar_televendas.addAction(self.actionPF3)
        self.menuEditar_televendas.addAction(self.actionPF4)
        self.menuEditar_televendas.addAction(self.actionPF5)
        self.menuEditar_televendas.addAction(self.actionPF6)
        self.menuSalvar_resetar = QtWidgets.QMenu(self.menuConfigura_es)
        self.menuSalvar_resetar.setObjectName("menuSalvar_resetar")
        self.actionSalvar = QtWidgets.QAction(MainWindow)
        self.actionSalvar.setObjectName("actionSalvar")
        self.actionResetar = QtWidgets.QAction(MainWindow)
        self.actionResetar.setObjectName("actionResetar")
        self.menuSalvar_resetar.addAction(self.actionSalvar)
        self.menuSalvar_resetar.addAction(self.actionResetar)
        self.actionResetar.triggered.connect(self.reset)
        self.actionSalvar.triggered.connect(self.salvar)
        self.actionEditar_pasta_principal.triggered.connect(self.principal)
        self.actionConsultar_status_de_envio.triggered.connect(self.openStatus)
        self.actionCadastro_usuarios.triggered.connect(self.openCadastro)
        self.actionPF1.triggered.connect(self.pf1)
        self.actionPF2.triggered.connect(self.pf2)
        self.actionPF3.triggered.connect(self.pf3)
        self.actionPF4.triggered.connect(self.pf4)
        self.actionPF5.triggered.connect(self.pf5)
        self.actionPF6.triggered.connect(self.pf6)
        if(self.priv_bd == 'admin'):
            self.menuConfigura_es.addAction(self.menuSalvar_resetar.menuAction())
            self.menuConfigura_es.addAction(self.actionEditar_pasta_principal)
            self.menuConfigura_es.addAction(self.menuEditar_televendas.menuAction())
            self.menuConfigura_es.addAction(self.actionConsultar_status_de_envio)
            self.menuConfigura_es.addAction(self.actionCadastro_usuarios)
            self.menuBar.addAction(self.menuConfigura_es.menuAction())
        if(self.priv_bd == 'backoffice'):
            self.menuConfigura_es.addAction(self.menuSalvar_resetar.menuAction())
            self.menuConfigura_es.addAction(self.actionEditar_pasta_principal)
            self.menuConfigura_es.addAction(self.menuEditar_televendas.menuAction())
            self.menuConfigura_es.addAction(self.actionConsultar_status_de_envio)
            self.menuBar.addAction(self.menuConfigura_es.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Multi Telecom"))
        #self.logout.setText(_translate("MainWindow", "Logout"))
        self.label_2.setText(_translate("MainWindow", "Sistema de controle e envio de planilhas."))
        self.check_pf6.setText(_translate("MainWindow", "TELEVENDAS PF6"))
        self.check_pf5.setText(_translate("MainWindow", "TELEVENDAS PF5"))
        self.check_pf2.setText(_translate("MainWindow", "TELEVENDAS PF2"))
        self.check_pf3.setText(_translate("MainWindow", "TELEVENDAS PF3"))
        self.check_pf1.setText(_translate("MainWindow", "TELEVENDAS PF1"))
        self.check_pf4.setText(_translate("MainWindow", "TELEVENDAS PF4"))
        self.label_3.setText(_translate("MainWindow", "Enviar planilhas para:"))
        self.enviar_planilhas.setText(_translate("MainWindow", "Enviar"))
        self.selecionar_pf1.setText(_translate("MainWindow", "Selecionar"))
        self.selecionar_pf2.setText(_translate("MainWindow", "Selecionar"))
        self.selecionar_pf3.setText(_translate("MainWindow", "Selecionar"))
        self.selecionar_pf4.setText(_translate("MainWindow", "Selecionar"))
        self.selecionar_pf5.setText(_translate("MainWindow", "Selecionar"))
        self.selecionar_pf6.setText(_translate("MainWindow", "Selecionar"))
        self.label_5.setText(_translate("MainWindow", "TextLabel"))
        self.label_9.setText(_translate("MainWindow", "TextLabel"))
        self.label_10.setText(_translate("MainWindow", "TextLabel"))
        self.label_11.setText(_translate("MainWindow", "TextLabel"))
        self.label_12.setText(_translate("MainWindow", "TextLabel"))
        self.label_13.setText(_translate("MainWindow", "TextLabel"))
        self.label_8.setText(_translate("MainWindow", "Versão 1.0.0"))
        self.label_14.setText(_translate("MainWindow", "Sistema criado por Lucas Alves; 2021"))
        self.selecionar_planilhas.setText(_translate("MainWindow", "Selecionar planilhas"))
        self.label_6.setText(_translate("MainWindow", "Dividir planilhas a cada"))
        self.label_7.setText(_translate("MainWindow", "linhas."))
        self.editar_planilha.setText(_translate("MainWindow", "Editar"))
        self.label_15.setText(_translate("MainWindow", "Editar planilhas:"))
        self.label_16.setText(_translate("MainWindow", ''))
        self.label_21.setText(_translate("MainWindow", "made by Lucas Alves"))
        self.label_22.setText(_translate("MainWindow", "github: @lucasfdelis"))
        self.label_23.setText(_translate("MainWindow", "Versão 1.1.0"))
        self.menuConfigura_es.setTitle(_translate("MainWindow", "Configurações"))
        self.menuEditar_televendas.setTitle(_translate("MainWindow", "Editar pastas de televendas"))
        self.actionEditar_pasta_principal.setText(_translate("MainWindow", "Editar pasta principal"))
        self.actionPF1.setText(_translate("MainWindow", "PF1"))
        self.actionPF2.setText(_translate("MainWindow", "PF2"))
        self.actionPF3.setText(_translate("MainWindow", "PF3"))
        self.actionPF4.setText(_translate("MainWindow", "PF4"))
        self.actionPF5.setText(_translate("MainWindow", "PF5"))
        self.actionPF6.setText(_translate("MainWindow", "PF6"))
        self.actionConsultar_status_de_envio.setText(_translate("MainWindow", "Consultar envios das pastas"))
        self.actionCadastro_usuarios.setText(_translate("MainWindow", "Adicionar novo usuário"))
        self.menuSalvar_resetar.setTitle(_translate("MainWindow", "Opções"))
        self.actionSalvar.setText(_translate("MainWindow", "Definir local das pastas escolhidas como padrão"))
        self.actionResetar.setText(_translate("MainWindow", "Resetar local das pastas"))
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
